syntax = "proto3";

option go_package = "pulsecore/proto";

service GameService {
    rpc BroadcastMessage(MessageRequest) returns (MessageResponse);
    rpc SendHeartbeat(HeartbeatRequest) returns (HeartbeatResponse);
    rpc SendMessageToServer(SendMessageRequest) returns (SendMessageResponse);
    rpc RegisterClient(RegisterClientRequest) returns (RegisterClientResponse);
    rpc ReceiveMessageFromServer(MessageFromServerRequest) returns (MessageFromServerResponse);
    rpc SendMessageToRoom(MessageToRoomRequest) returns (MessageResponse);
    rpc SolveChallenge(ChallengeRequest) returns (ChallengeResponse);
    rpc Evaluate(EvaluateRequest) returns (EvaluateResponse);
}

message MessageRequest {
    string message = 1;
}

message MessageResponse {
    bool success = 1;
    string reply = 2;
}

message HeartbeatRequest {
    string clientId = 1;
}

message HeartbeatResponse {
    bool success = 1;
    string challengeQuestion = 2;
}

message SendMessageRequest {
  string message = 1;
  string sender_rpc_address = 2;
}

message SendMessageResponse {
    bool success = 1;
}

message RegisterClientRequest {
    string rpcAddress = 1;
}

message RegisterClientResponse {
    bool success = 1;
}

message MessageFromServerRequest {
    string message = 1;
    string sender_address = 2;
}


message MessageFromServerResponse {
    bool success = 1;
}

message MessageToRoomRequest {
    string roomID = 1;
    string message = 2;
}

message ChallengeRequest {
    string Question = 1;
}

message ChallengeResponse {
    string Answer = 1;
}

// Request for evaluating a function call with arguments
message EvaluateRequest {
    string functionName = 1;  // The name of the function to call
    repeated string arguments = 2;  // The arguments to pass to the function
}

// Response from evaluating a function call
message EvaluateResponse {
    string result = 1;  // The result of the function call
    string error = 2;   // Error message if the function call failed
}